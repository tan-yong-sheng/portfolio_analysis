# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from degiro_connector.trading.models import trading_pb2 as degiro__connector_dot_trading_dot_models_dot_trading__pb2
from degiro_connector.trading.models import trading_relay_pb2 as degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class TradingRelayStub(object):
    """SERVICES
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.confirm_order = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/confirm_order',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ConfirmOrder.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.ConfirmationResponse.FromString,
                )
        self.product_search = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/product_search',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ProductSearch.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.FromString,
                )
        self.set_config = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/set_config',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.SetConfig.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )
        self.check_order = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/check_order',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.CheckingResponse.FromString,
                )
        self.connect = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/connect',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                )
        self.delete_order = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/delete_order',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )
        self.get_account_info = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_account_info',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                )
        self.get_account_overview = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_account_overview',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.FromString,
                )
        self.get_agenda = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_agenda',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.FromString,
                )
        self.get_cash_account_report = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_cash_account_report',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.FromString,
                )
        self.get_client_details = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_client_details',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                )
        self.get_company_profile = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_company_profile',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyProfile.FromString,
                )
        self.get_company_ratios = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_company_ratios',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyRatios.FromString,
                )
        self.get_config = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_config',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                )
        self.get_favourites_list = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_favourites_list',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Favourites.FromString,
                )
        self.get_financial_statements = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_financial_statements',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.FinancialStatements.FromString,
                )
        self.get_latest_news = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_latest_news',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.FromString,
                )
        self.get_news_by_company = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_news_by_company',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.FromString,
                )
        self.get_orders_history = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_orders_history',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.FromString,
                )
        self.get_products_config = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_products_config',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.Config.FromString,
                )
        self.get_products_info = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_products_info',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.FromString,
                )
        self.get_top_news_preview = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_top_news_preview',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TopNewsPreview.FromString,
                )
        self.get_transactions_history = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_transactions_history',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.Request.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.FromString,
                )
        self.get_update = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/get_update',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.RequestList.SerializeToString,
                response_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.FromString,
                )
        self.logout = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/logout',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )
        self.update_order = channel.unary_unary(
                '/degiro_connector.trading_relay.TradingRelay/update_order',
                request_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )


class TradingRelayServicer(object):
    """SERVICES
    """

    def confirm_order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def product_search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_config(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def check_order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_account_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_account_overview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_agenda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_cash_account_report(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_client_details(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_company_profile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_company_ratios(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_config(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_favourites_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_financial_statements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_latest_news(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_news_by_company(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_orders_history(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_products_config(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_products_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_top_news_preview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_transactions_history(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TradingRelayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'confirm_order': grpc.unary_unary_rpc_method_handler(
                    servicer.confirm_order,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ConfirmOrder.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.ConfirmationResponse.SerializeToString,
            ),
            'product_search': grpc.unary_unary_rpc_method_handler(
                    servicer.product_search,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ProductSearch.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.SerializeToString,
            ),
            'set_config': grpc.unary_unary_rpc_method_handler(
                    servicer.set_config,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.SetConfig.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
            'check_order': grpc.unary_unary_rpc_method_handler(
                    servicer.check_order,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.CheckingResponse.SerializeToString,
            ),
            'connect': grpc.unary_unary_rpc_method_handler(
                    servicer.connect,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
            'delete_order': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_order,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
            'get_account_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_account_info,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'get_account_overview': grpc.unary_unary_rpc_method_handler(
                    servicer.get_account_overview,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.SerializeToString,
            ),
            'get_agenda': grpc.unary_unary_rpc_method_handler(
                    servicer.get_agenda,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.SerializeToString,
            ),
            'get_cash_account_report': grpc.unary_unary_rpc_method_handler(
                    servicer.get_cash_account_report,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.SerializeToString,
            ),
            'get_client_details': grpc.unary_unary_rpc_method_handler(
                    servicer.get_client_details,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'get_company_profile': grpc.unary_unary_rpc_method_handler(
                    servicer.get_company_profile,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyProfile.SerializeToString,
            ),
            'get_company_ratios': grpc.unary_unary_rpc_method_handler(
                    servicer.get_company_ratios,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyRatios.SerializeToString,
            ),
            'get_config': grpc.unary_unary_rpc_method_handler(
                    servicer.get_config,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'get_favourites_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_favourites_list,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Favourites.SerializeToString,
            ),
            'get_financial_statements': grpc.unary_unary_rpc_method_handler(
                    servicer.get_financial_statements,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.FinancialStatements.SerializeToString,
            ),
            'get_latest_news': grpc.unary_unary_rpc_method_handler(
                    servicer.get_latest_news,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.SerializeToString,
            ),
            'get_news_by_company': grpc.unary_unary_rpc_method_handler(
                    servicer.get_news_by_company,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.SerializeToString,
            ),
            'get_orders_history': grpc.unary_unary_rpc_method_handler(
                    servicer.get_orders_history,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.SerializeToString,
            ),
            'get_products_config': grpc.unary_unary_rpc_method_handler(
                    servicer.get_products_config,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.Config.SerializeToString,
            ),
            'get_products_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_products_info,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.SerializeToString,
            ),
            'get_top_news_preview': grpc.unary_unary_rpc_method_handler(
                    servicer.get_top_news_preview,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TopNewsPreview.SerializeToString,
            ),
            'get_transactions_history': grpc.unary_unary_rpc_method_handler(
                    servicer.get_transactions_history,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.Request.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.SerializeToString,
            ),
            'get_update': grpc.unary_unary_rpc_method_handler(
                    servicer.get_update,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.RequestList.FromString,
                    response_serializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.SerializeToString,
            ),
            'logout': grpc.unary_unary_rpc_method_handler(
                    servicer.logout,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
            'update_order': grpc.unary_unary_rpc_method_handler(
                    servicer.update_order,
                    request_deserializer=degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'degiro_connector.trading_relay.TradingRelay', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TradingRelay(object):
    """SERVICES
    """

    @staticmethod
    def confirm_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/confirm_order',
            degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ConfirmOrder.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.ConfirmationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def product_search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/product_search',
            degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.ProductSearch.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_config(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/set_config',
            degiro__connector_dot_trading_dot_models_dot_trading__relay__pb2.SetConfig.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def check_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/check_order',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.CheckingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/connect',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/delete_order',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_account_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_account_info',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_account_overview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_account_overview',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.AccountOverview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_agenda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_agenda',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Agenda.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_cash_account_report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_cash_account_report',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.CashAccountReport.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_client_details(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_client_details',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_company_profile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_company_profile',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyProfile.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_company_ratios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_company_ratios',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.CompanyRatios.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_config(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_config',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_favourites_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_favourites_list',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Favourites.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_financial_statements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_financial_statements',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.FinancialStatements.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_latest_news(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_latest_news',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.LatestNews.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_news_by_company(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_news_by_company',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.NewsByCompany.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_orders_history(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_orders_history',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.OrdersHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_products_config(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_products_config',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductSearch.Config.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_products_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_products_info',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.ProductsInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_top_news_preview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_top_news_preview',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.TopNewsPreview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_transactions_history(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_transactions_history',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.Request.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.TransactionsHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/get_update',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.RequestList.SerializeToString,
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Update.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/logout',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/degiro_connector.trading_relay.TradingRelay/update_order',
            degiro__connector_dot_trading_dot_models_dot_trading__pb2.Order.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
